plugins {
	id 'java'
	id 'maven'
	id 'jacoco'
	id "com.github.johnrengelman.shadow" version "2.0.3"
	id 'io.franzbecker.gradle-lombok' version '1.14'
	id 'com.github.kt3k.coveralls' version '2.6.3'
}

group = 'de.uni-bremen.informatik.st'
version = '1.3.2'

lombok {
	version = "1.16.20"
	sha256 = "c5178b18caaa1a15e17b99ba5e4023d2de2ebc18b58cde0f5a04ca4b31c10e6d"
}

repositories {
	mavenCentral()
}

configurations {
	extraLibs
}

dependencies {
	// add local jars from 'libs' directory
	extraLibs fileTree(dir: 'libs', include: '*.jar')
	// required by JavaHG
	compile 'com.google.guava:guava:24.1-jre'
	// override 1.9, see https://github.com/uni-bremen-agst/libvcs4j/issues/2
	compile ("commons-codec:commons-codec:1.11") { force = true }

	compile 'com.ibm.icu:icu4j:59.1'
	compile 'de.uni-bremen.informatik.st:libvcs4j-api:1.3.2'
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.eclipse.jgit:org.eclipse.jgit:4.10.0.201712302008-r'
	compile 'org.gitlab:java-gitlab-api:4.0.0'
	compile 'org.kohsuke:github-api:1.92'
	compile 'org.slf4j:slf4j-api:1.7.22'
	compile 'org.tmatesoft.svnkit:svnkit:1.9.1'
	testCompile 'junit:junit:4.12'
	testCompile 'commons-io:commons-io:2.6'
	testCompile 'org.apache.commons:commons-compress:1.15'
	testCompile 'org.assertj:assertj-core:3.8.0'
	testCompile 'org.slf4j:slf4j-simple:1.7.25'

	configurations.compile.extendsFrom(configurations.extraLibs)
}

jacocoTestReport {
	reports {
		xml.enabled = true // required by Coveralls
		html.enabled = true
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: 'bmsi/**')
		})
	}
}

import io.franzbecker.gradle.lombok.task.DelombokTask
task delombok(type: DelombokTask) {
	dependsOn compileJava
	ext.outputDir = file("$buildDir/delombok")
	outputs.dir(outputDir)
	sourceSets.main.java.srcDirs.each {
		inputs.dir(it)
		args(it, "-d", outputDir)
	}
}

task sourcesJar(type: Jar) {
	dependsOn classes
	dependsOn delombok
	classifier = 'sources'
	from delombok.outputDir
}

javadoc {
	dependsOn delombok
	source = delombok.outputDir
	exclude 'bmsi/util'
}

task javadocJar(type: Jar) {
	dependsOn javadoc
	classifier = 'javadoc'
	from javadoc.destinationDir
}

jar {
	from {
		configurations.extraLibs.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

build {
	doLast {
		pom {
			project {
				name 'libvcs4j'
				description 'A Java Library for Repository Mining'
				url 'https://github.com/uni-bremen-agst/libvcs4j'
				licenses {
					license {
						name 'GPL-3.0'
						url 'https://opensource.org/licenses/GPL-3.0'
					}
				}
				developers {
					developer {
						name 'Marcel Steinbeck'
						email 'marcel@informatik.uni-bremen.de'
						organization 'AG Softwaretechnik (University of Bremen)'
						organizationUrl 'https://www.informatik.uni-bremen.de/st'
					}
				}
				scm {
					connection 'scm:git:git://github.com/uni-bremen-agst/libvcs4j.git'
					developerConnection 'scm:git:ssh://github.com:uni-bremen-agst/libvcs4j.git'
					url 'https://github.com/uni-bremen-agst/libvcs4j'
				}
			}
		}.writeTo("${buildDir}/libs/pom.xml")
	}
}
